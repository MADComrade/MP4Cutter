//////////////////////////////////////////////////////////////////////////////////////////
//---------------------------ПОДКЛЮЧЕНИЕ ЗАГОЛОВОЧНЫХ ФАЙЛОВ----------------------------//
//////////////////////////////////////////////////////////////////////////////////////////
#include "ftyp.h"

//////////////////////////////////////////////////////////////////////////////////////////
//---------------------------ОПРЕДЕЛЕНИЕ МЕТОДОВ----------------------------------------//
//////////////////////////////////////////////////////////////////////////////////////////

//**************************************************************************************//
//--------------------------------------------------------------------------------------//
//---------------------------КЛАСС АТОМА FTYP-------------------------------------------//
//--------------------------------------------------------------------------------------//
//**************************************************************************************//
using namespace std;                                                                    //использование пространства имен STD

//**************************************************************************************//
//------------конструктор---------------------------------------------------------------//
FTYP::FTYP():Atom(FTYP_NAME, FTYP_DIG_NAME)
{

}

//**************************************************************************************//
//------------деконструктор-------------------------------------------------------------//
FTYP::~FTYP()
{

}

//**************************************************************************************//
//------------парсинг структуры атома FTYP----------------------------------------------//
void FTYP::parse(StreamReader &stream, uint32_t &startPos)
{
    printAtomName(LV1);                                                                 //вывод названия атома с определненным выравниванием(lv)
    m_size = stream.readSizeAtom();                                                     //размер чанка атома в памяти(???)
    m_data.resize(m_size,0);                                                            //передача в вектор m_data значений m_size и direction (???)(потому что в конце концов будет переход к файлу callbackinterface.h к виртуальной функции virtual void resizeAtom(uint32_t size, DIRECT_RESIZE direction)=0; (???))
    stream.read(&( m_data[ 0 ]),m_size);                                                //чтение информации длины m_size по адресу m_data[ 0 ]
    startPos +=m_size;                                                                  //начальная позиция файла переносится дальше на размер m_size
}

//**************************************************************************************//
//------------запись атома FTYP---------------------------------------------------------//
void FTYP::writeAtom(StreamWriter &stream)
{
    //stream.writeLitToBigEndian(m_size);
    //stream.writeAtomName(atomTextName());
    stream.write(&( m_data[ 0 ]),m_size);                                               //запись в новый файл MP4 данных длиной m_size по адресу m_data[ 0 ]
}
